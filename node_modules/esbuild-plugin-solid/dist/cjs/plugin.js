var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/plugin.ts
var plugin_exports = {};
__export(plugin_exports, {
  solidPlugin: () => solidPlugin
});
var import_path = require("path");
var import_promises = require("fs/promises");
var import_core = require("@babel/core");
var import_babel_preset_solid = __toESM(require("babel-preset-solid"));
var import_preset_typescript = __toESM(require("@babel/preset-typescript"));
function solidPlugin(options = {}) {
  return {
    name: "esbuild:solid",
    setup(build) {
      build.onLoad({ filter: /\.(t|j)sx$/ }, async (args) => {
        const source = await (0, import_promises.readFile)(args.path, { encoding: "utf-8" });
        const { name, ext } = (0, import_path.parse)(args.path);
        const filename = name + ext;
        const { code } = await (0, import_core.transformAsync)(source, {
          presets: [[import_babel_preset_solid.default, options], import_preset_typescript.default],
          filename,
          sourceMaps: "inline"
        });
        return { contents: code, loader: "js" };
      });
    }
  };
}
module.exports = __toCommonJS(plugin_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  solidPlugin
});
