// src/plugin.ts
import { parse } from "path";
import { readFile } from "fs/promises";
import { transformAsync } from "@babel/core";
import solid from "babel-preset-solid";
import ts from "@babel/preset-typescript";
function solidPlugin(options = {}) {
  return {
    name: "esbuild:solid",
    setup(build) {
      build.onLoad({ filter: /\.(t|j)sx$/ }, async (args) => {
        const source = await readFile(args.path, { encoding: "utf-8" });
        const { name, ext } = parse(args.path);
        const filename = name + ext;
        const { code } = await transformAsync(source, {
          presets: [[solid, options], ts],
          filename,
          sourceMaps: "inline"
        });
        return { contents: code, loader: "js" };
      });
    }
  };
}
export {
  solidPlugin
};
